import java.util.*;
class Node{
    int data;
    Node left,right;
    Node(int data)
    {
        this.data=data;
        left =null;
        right=null;
    }
}
public class ZicZac
{
	public static void main(String[] args) {
	    Node root=null;
		Scanner sc =new Scanner(System.in);
		int n=sc.nextInt();
		for(int i=0;i<n;i++)
		    root=add(sc.nextInt(),root);
		bfs(root);
	
		//System.out.println(x+" "+y);
	}
   public static void bfs(Node root)
   {
       Queue<Node> q=new LinkedList<Node>();
       Stack<Node> s=new Stack<Node>();
		Node temp=root;
		q.add(temp);
		int flag=0;
		while(!q.isEmpty())
		{
		    int c=q.size();
		    
		    while(c-->0)
		    {
		    temp=q.poll();
		    if(temp.left!=null)
		        q.add(temp.left);
		    if(temp.right!=null)
		         q.add(temp.right);
		    if(flag==0)
		    {
		    System.out.print(temp.data+" ");
		        if(c==0)
		        {
		            flag=1;
		             
		        }
		    }
		    else
		    {
		         s.add(temp);
		    }
		    }
		   
		    int y1=s.size();
		    while(y1-->0)
	      {
		            System.out.print(s.pop().data+" ");
			           flag=0;
		    }
		    System.out.println();
		    
		    
		    
		}
	
   }
	public  static Node add(int x,Node root)
	{
	     Node n=new Node(x);
	    if(root==null)
	    {
	       
	        root=n;
	        return root;
	        
	    }
	   
	    Node temp=root;
	    Node tem=null;
	    int flag=-1;
	    while(temp!=null)
	    {
	        
	        tem=temp;
	        if(x<temp.data)
	        {
	            
	            temp=temp.left;
	            flag=0;
	        }
	        else
	        {
	            
	            temp=temp.right;
	            flag=1;
	        }
	        
	    }
	     temp=n;
	    if(x<tem.data)
	    {
	       
	        tem.left=temp;
	    }
	    else
	    {
	        tem.right=temp;
	    }
	    return root;
	}

}
